Q.  Given an array A[ ] of positive integers of size N, where each value represents the number of chocolates in a packet. Each packet can have a variable number of chocolates. There are M students, the task is to distribute chocolate packets among M students such that :
1. Each student gets exactly one packet.
2. The difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student is minimum.
-------------------------------------------
Time Complexity: O(nlogn)
-------------------------------------------
import java.util.*;
public class ChocolateDistribution{

    public static int find(int[]arr, int n, int m){
        int ans = Integer.MAX_VALUE;

        Arrays.sort(arr);

        for (int i = 0; i < n - m; i++){
            int minW = arr[i];
            int maxW = arr[i + m -1];
            int gap = maxW - minW;

            if (gap < ans){
                ans = gap;
            }
        }
        return ans;
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i = 0 ; i < n ; i++) {
            arr[i] = sc.nextInt();
        }
        int m = sc.nextInt();
        System.out.println(find(arr, n, m));
    }
}
---------------------------
Input:
8
3 4 1 9 56 7 9 12
5

Output:
6
----------------
Input:
7 3 2 4 9 12 56
3

Output:
2

******************









